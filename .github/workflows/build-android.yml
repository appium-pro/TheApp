name: "Build Android"

on:
  push:
    branches: [main]
    paths-ignore:
      - README.md
      - .gitignore
      - .editorconfig
      - .eslintrc.js
      - .node-version
      - .prettierrc.js
      - .ruby-version
      - ios/**
      - vendor/**
      - Gemfile
      - Gemfile.lock
      - .github/workflows/build-ios.yml

  pull_request:
    branches: [main]
    paths-ignore:
      - README.md
      - .gitignore
      - .editorconfig
      - .eslintrc.js
      - .node-version
      - .prettierrc.js
      - .ruby-version
      - ios/**
      - vendor/**
      - Gemfile
      - Gemfile.lock
      - .github/workflows/build-ios.yml

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HEADSPIN_API_TOKEN: ${{ secrets.HEADSPIN_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Java
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"
          cache: "gradle"

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: NPM Install
        run: |
          npm install
      - name: Build application
        run: |
          npm run android-release
      - name: Upload application to HeadSpin
        run: |
          cp ./android/app/build/outputs/apk/release/app-release.apk ./TheApp.apk
          export APP_ID=$(curl -X POST "https://$HEADSPIN_API_TOKEN@api-dev.headspin.io/v1/app/upload" -F app="@TheApp.apk" | jq -r .app_id)
          echo "APP_ID=$APP_ID" >> "$GITHUB_ENV"
      - name: Run Appium Tests
        run: |
          export HEADSPIN_APP_ID="${{ env.APP_ID }}"
          export GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          export BUILD_ID="$GITHUB_REF_NAME:$GIT_HASH"
          DEBUG=1 HEADSPIN=1 ANDROID=1 REAL_DEVICE=1 npm test
